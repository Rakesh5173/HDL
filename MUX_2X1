// 4bit counter with asynchronous reset

module counter(rst, clk, count);
  input clk,rst;
  output reg [3:0] count;
  
  always @(posedge clk or posedge rst) // for synchronous reset remove posedge rst
    begin
      if(rst)
        count<=0;
      else
        count +=1;
    end
endmodule

// Code your testbench here
// or browse Examples
module alu_tb;
  reg clk;
  reg rst;
  reg [7:0] a, b;
  reg [1:0] sel;
  wire [7:0] f;

  alu dut(a, b, sel, f);


  initial begin
    for (sel = 0; sel < 4; sel++) begin
      for (a = 0; a < 16; a++) begin
        for (b = 0; b < 16; b++) begin
          $display("sel = %d, a = %d, b = %d, f = %d", sel, a, b, f);
        end
      end
    end
  end
endmodule

