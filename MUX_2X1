// 4bit counter with asynchronous reset

module counter(rst, clk, count);
  input clk,rst;
  output reg [3:0] count;
  
  always @(posedge clk or posedge rst) // for synchronous reset remove posedge rst
    begin
      if(rst)
        count<=0;
      else
        count +=1;
    end
endmodule

// Code your testbench here
// or browse Examples
module counter_tb;
  reg clk;
  reg rst;
  wire [3:0] count;

  counter dut(.clk(clk), .rst(rst), .count(count));

  initial begin
    clk = 0;
    rst = 1;
    #20;
    rst = 0;
  end

  always #5 clk = ~clk;

  initial begin
    for (int i = 0; i < 16; i++) begin
      #10;
      $display("count = %d", count);
    end
  end
endmodule
